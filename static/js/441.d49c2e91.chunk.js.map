{"version":3,"file":"static/js/441.d49c2e91.chunk.js","mappings":"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","sources":["HOC/WithNoAuthRedurect.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView/RegisterView.styled.js","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import { getUser } from \"redux/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction WithNoAuthRedirect(Component, navigateTo){\r\n    const ComponentWithRedirect = props => {\r\n        const user = useSelector(getUser);\r\n        return !!user ? <Navigate to={navigateTo}/> : <Component {...props} /> \r\n    }\r\n    return ComponentWithRedirect;\r\n}\r\n\r\nWithNoAuthRedirect.propTypes = {\r\n    navigateTo: PropTypes.string.isRequired,\r\n    Component: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default WithNoAuthRedirect;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n// export const Form = styled.form`\r\n//   display: flex;\r\n//   gap: 10px;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n// `;\r\n\r\n// export const Label = styled.label`\r\n//   display: flex;\r\n//   flex-display: column;\r\n//   gap: 5px;\r\n// `;\r\n\r\n// export const Button = styled.button`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   background-color: gray;\r\n//   border: none;\r\n//   border-radius: 4px;\r\n//   color: white;\r\n//   font-size: 18px;\r\n//   cursor: pointer;\r\n\r\n//   &:disabled {\r\n//     border: 1px solid #999999;\r\n//     background-color: #cccccc;\r\n//     color: #666666;\r\n//   }\r\n// `;\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  height: 66px;\r\n  font-weight: bold;\r\n  width: 300px;\r\n  color: ${props => (props?.passwordInvalid ? 'red' : 'black')};\r\n`;\r\n\r\nexport const LabelCheckbox = styled.label`\r\n  display: flex;\r\n  justify-content: start;\r\n  align-items: center;\r\n  height: 26px;\r\n  gap: 10px;\r\n  font-weight: 400;\r\n  width: 150px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: gray;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &:disabled {\r\n    cursor: default;\r\n    border: 1px solid #999999;\r\n    background-color: #cccccc;\r\n    color: #666666;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  margin-top: 6px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const ButtonBlock = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RedirectLink = styled(Link)`\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: black;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: teal;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import { signUp } from 'redux/userSlice';\r\nimport {\r\n  Form,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  Container,\r\n  RedirectLink,\r\n  ButtonBlock,\r\n  LabelCheckbox,\r\n} from './RegisterForm.styled';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const RegisterForm = ({ isLoading }) => {\r\n  const dispatch = useDispatch();\r\n  const [login, setLogin] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordInvalid, setPasswordInvalid] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    if (name === 'password') {\r\n      if (!value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)) {\r\n        setPasswordInvalid(true);\r\n      } else {\r\n        setPasswordInvalid(false);\r\n      }\r\n    }\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      case 'login':\r\n        return setLogin(value.toLowerCase());\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onPassFocus = e => {\r\n    if (e.target.value.length < 8 && e.target.value.length >= 1) {\r\n      setPasswordInvalid(true);\r\n    } else {\r\n      setPasswordInvalid(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (password.length < 8 && login.length < 1 && email.length < 3) return;\r\n    const formData = {\r\n      name: login,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(signUp(formData));\r\n\r\n    setLogin('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const pass = password.length < 8;\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <Label>\r\n          Login\r\n          <Input\r\n            type=\"text\"\r\n            name=\"login\"\r\n            value={login}\r\n            onChange={handleChange}\r\n            placeholder=\"cooker229\"\r\n            required={true}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Email\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@gmail.com\"\r\n            required={true}\r\n          />\r\n        </Label>\r\n        <Label passwordInvalid={passwordInvalid}>\r\n          Password\r\n          <Input\r\n            type={`${checked ? 'text' : 'password'}`}\r\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n            name=\"password\"\r\n            value={password}\r\n            onFocus={onPassFocus}\r\n            onBlur={() => setPasswordInvalid(false)}\r\n            onChange={handleChange}\r\n            min={8}\r\n            max={21}\r\n            placeholder=\"Enter min 8 symbols\"\r\n            required={true}\r\n          />\r\n        </Label>\r\n        <LabelCheckbox>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"check\"\r\n            onChange={() => setChecked(p => !p)}\r\n          />\r\n          Check password\r\n        </LabelCheckbox>\r\n        <ButtonBlock>\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={isLoading || !login || !email || pass}\r\n          >\r\n            Register\r\n          </Button>\r\n          <RedirectLink to=\"/login\">LogIn</RedirectLink>\r\n        </ButtonBlock>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// RegisterForm.propTypes = {\r\n//   isLoading: PropTypes.bool.isRequired,\r\n// };\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  // padding: 20px;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  width: 500px;\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoading } from 'redux/userSlice';\r\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\r\nimport WithNoAuthRedirect from 'HOC/WithNoAuthRedurect';\r\nimport { Title, Wrap } from './RegisterView.styled';\r\n\r\nconst RegisterView = () => {\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  return (\r\n    <Wrap>\r\n      <Title>Register Page</Title>\r\n      <RegisterForm isLoading={isLoading} />\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default WithNoAuthRedirect(RegisterView, '/contacts');\r\n"],"names":["Component","navigateTo","props","useSelector","getUser","to","Container","styled","Form","Label","passwordInvalid","LabelCheckbox","Button","Input","ButtonBlock","RedirectLink","Link","RegisterForm","isLoading","dispatch","useDispatch","useState","login","setLogin","email","setEmail","password","setPassword","setPasswordInvalid","checked","setChecked","handleChange","target","name","value","match","toLowerCase","pass","length","onSubmit","e","preventDefault","formData","signUp","autoComplete","type","onChange","placeholder","required","title","pattern","onFocus","onBlur","min","max","p","disabled","Title","Wrap","WithNoAuthRedirect","getIsLoading"],"sourceRoot":""}